#!/bin/sh

TOKENS="INT BOOL VOID WORD NUMBER IF WHILE ELSE RETURN TRUE FALSE AND OR EQ NE GTE LTE"
SIGNS="= ; , + - \* / % : ( ) { } [ ] < > !  & |"

/bin/echo -n "// Generated by $0 at " > tokens.h
date >> tokens.h
echo >> tokens.h
N=1
for i in $TOKENS; do
	echo "#define T_$i $N" >> tokens.h
	N=$(($N+1))
done
echo "#define TOKEN_MAX $N" >> tokens.h
echo >> tokens.h
echo >> tokens.h
echo "static char *" >> tokens.h
echo "token_to_string(char token) {" >> tokens.h
echo "	switch(token) {" >> tokens.h
for i in $TOKENS; do
	echo "		case T_$i:" >> tokens.h
	echo "			return \"$i\";" >> tokens.h
done
for i in $SIGNS; do
	echo "		case '$i':" >> tokens.h
	echo "			return \"$i\";" >> tokens.h
done
echo "	}" >> tokens.h
echo "	return NULL;" >> tokens.h
echo "}" >> tokens.h
echo >> tokens.h
echo "static int" >> tokens.h
echo "string_to_token(char *str) {" >> tokens.h
echo "	if(str[1] == 0) {" >> tokens.h
echo "		switch(str[0]) {" >> tokens.h
for i in $SIGNS; do
	echo "			case '$i':" >> tokens.h
done
echo "				return str[0];" >> tokens.h
echo "			default:" >> tokens.h
echo "				return 0;" >> tokens.h
echo "		}" >> tokens.h
echo "	}" >> tokens.h
for i in $TOKENS; do
	echo "	if(strcmp(\"T_$i\", str) == 0) {" >> tokens.h
	echo "		return T_$i;" >> tokens.h
	echo "	} else " >> tokens.h
done
echo "		return 0;" >> tokens.h
echo "}" >> tokens.h
